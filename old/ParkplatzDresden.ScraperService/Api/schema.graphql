schema {
  query: Query
  mutation: Mutation
  subscription: Subscriptions
}

type Query {
  parkArea(id: Int!): ParkArea!
  parkAreas: [ParkArea!]!
}

type Mutation {
  updateParkArea(parkArea: ParkAreaInput!): ParkAreaUpdatedPayload!
}

type Subscriptions {
  parkingSlotsUpdated(id: Int!): ParkingSlotsUpdatedPayload!
}

type ParkingSlotsUpdatedPayload {
  parkAreaId: Int!
  parkingSlots: ParkingSlots!
}

input ParkAreaInput {
  displayName: String!
  parkingSlots: ParkingSlotsInput
  parkingSlotsHistory: [ParkingSlotsHistoryInput!]
  id: Int!
  createdAt: DateTime!
  changedAt: DateTime!
}

type ParkAreaUpdatedPayload {
  type: ParkAreaUpdatedPayloadType!
}

type ParkArea {
  displayName: String!
  parkingSlots: ParkingSlots
  parkingSlotsHistory: [ParkingSlotsHistory!]
  id: Int!
  createdAt: DateTime!
  changedAt: DateTime!
}

"The `DateTime` scalar represents an ISO-8601 compliant date time type."
scalar DateTime

input ParkingSlotsHistoryInput {
  total: Int
  free: Int
  parkAreaId: Int!
  parkArea: ParkAreaInput!
  id: Int!
  createdAt: DateTime!
  changedAt: DateTime!
}

input ParkingSlotsInput {
  total: Int
  free: Int
  parkAreaId: Int!
  parkArea: ParkAreaInput!
  id: Int!
  createdAt: DateTime!
  changedAt: DateTime!
}

type ParkingSlots {
  total: Int
  free: Int
  parkAreaId: Int!
  parkArea: ParkArea!
  id: Int!
  createdAt: DateTime!
  changedAt: DateTime!
}

enum ParkAreaUpdatedPayloadType {
  UNCHANGED
  CREATED
  UPDATED
}

type ParkingSlotsHistory {
  total: Int
  free: Int
  parkAreaId: Int!
  parkArea: ParkArea!
  id: Int!
  createdAt: DateTime!
  changedAt: DateTime!
}

"The purpose of the `cost` directive is to define a `weight` for GraphQL types, fields, and arguments. Static analysis can use these weights when calculating the overall cost of a query or response."
directive @cost("The `weight` argument defines what value to add to the overall cost for every appearance, or possible appearance, of a type, field, argument, etc." weight: String!) on SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM | INPUT_FIELD_DEFINITION